/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/lamp2/scene.gltf -t -r public
Author: Avadhoot (https://sketchfab.com/avadhootnb11)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/low-poly-hanging-light-b70dcbb9568846feb4758edcbefbe2c5
Title: Low Poly hanging Light
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube_m1_0: THREE.Mesh
    Torus_m1_0: THREE.Mesh
    Cube001_m1_0: THREE.Mesh
    Cylinder004_m1_0: THREE.Mesh
    Cylinder005_m1_0: THREE.Mesh
    Cylinder006_m1_0: THREE.Mesh
    Cylinder002_m1_0: THREE.Mesh
    Plane_m1_0: THREE.Mesh
    Torus001_m1_0: THREE.Mesh
    Cube002_m1_0: THREE.Mesh
    Cylinder001_m1_0: THREE.Mesh
  }
  materials: {
    material: THREE.MeshStandardMaterial
  }
}

export default function HangingLight(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('models/lamp2/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group scale={0.01} rotation-y={-Math.PI / 2}>
        <mesh geometry={nodes.Cube_m1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.Torus_m1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.Cube001_m1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.Cylinder004_m1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.Cylinder005_m1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.Cylinder006_m1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.Cylinder002_m1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.Plane_m1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.Torus001_m1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.Cube002_m1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.Cylinder001_m1_0.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      </group>
    </group>
  )
}

useGLTF.preload('models/lamp2/scene.gltf')

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/porsche/scene.gltf -t -r public
Author: COOL601 (https://sketchfab.com/COOL601)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/porsche-911-gt2-rs-with-angle-eyes-41419345868e406eaec8a271e33de3c1
Title: Porsche 911 GT2 RS With Angle Eyes
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useLoader } from '@react-three/fiber'
import Wheel from './Wheel'
import Wheel2 from './Wheel2'
import Tire from './Tire'
import { CarConfigs } from '../interfaces'
import { Garage } from './Garage'

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh
    Object_5: THREE.Mesh
    Object_7: THREE.Mesh
    Object_8: THREE.Mesh
    Object_10: THREE.Mesh
    Object_11: THREE.Mesh
    Object_12: THREE.Mesh
    Object_13: THREE.Mesh
    Object_14: THREE.Mesh
    Object_15: THREE.Mesh
    Object_16: THREE.Mesh
    Object_17: THREE.Mesh
    Object_18: THREE.Mesh
    Object_19: THREE.Mesh
    Object_20: THREE.Mesh
    Object_21: THREE.Mesh
    Object_22: THREE.Mesh
    Object_23: THREE.Mesh
    Object_24: THREE.Mesh
    Object_25: THREE.Mesh
    Object_26: THREE.Mesh
    Object_27: THREE.Mesh
    Object_28: THREE.Mesh
    Object_29: THREE.Mesh
    Object_30: THREE.Mesh
    Object_31: THREE.Mesh
    Object_32: THREE.Mesh
    Object_33: THREE.Mesh
    Object_34: THREE.Mesh
    Object_35: THREE.Mesh
    Object_36: THREE.Mesh
    Object_37: THREE.Mesh
    Object_38: THREE.Mesh
    Object_39: THREE.Mesh
    Object_41: THREE.Mesh
    Object_42: THREE.Mesh
    Object_43: THREE.Mesh
    Object_45: THREE.Mesh
    Object_46: THREE.Mesh
    Object_47: THREE.Mesh
    Object_49: THREE.Mesh
    Object_50: THREE.Mesh
    Object_52: THREE.Mesh
    Object_53: THREE.Mesh
    Object_54: THREE.Mesh
    Object_56: THREE.Mesh
    Object_57: THREE.Mesh
    Object_58: THREE.Mesh
    Object_60: THREE.Mesh
    Object_61: THREE.Mesh
  }
  materials: {
    ColouredMtl: THREE.MeshStandardMaterial
    paint1Mtl: THREE.MeshStandardMaterial
    Paint: THREE.MeshStandardMaterial
    wire_141007058: THREE.MeshStandardMaterial
    Base: THREE.MeshStandardMaterial
    Carbon1: THREE.MeshStandardMaterial
    Carbon1M: THREE.MeshStandardMaterial
    Carbon2: THREE.MeshStandardMaterial
    Coloured: THREE.MeshStandardMaterial
    Spiegels: THREE.MeshStandardMaterial
    GlassMtl: THREE.MeshStandardMaterial
    GlassRedMtl: THREE.MeshStandardMaterial
    GlassDarkMtl: THREE.MeshStandardMaterial
    Grille1A: THREE.MeshStandardMaterial
    Grille2A: THREE.MeshStandardMaterial
    Grille3A: THREE.MeshStandardMaterial
    Grille4A: THREE.MeshStandardMaterial
    interior_o: THREE.MeshStandardMaterial
    interior: THREE.MeshStandardMaterial
    color2_o: THREE.MeshStandardMaterial
    color2: THREE.MeshStandardMaterial
    Lights: THREE.MeshStandardMaterial
    Achterlichten: THREE.MeshStandardMaterial
    kentekenlicht: THREE.MeshStandardMaterial
    Angle_eye_binnen: THREE.MeshStandardMaterial
    Angle_eye: THREE.MeshStandardMaterial
    knipperlichten: THREE.MeshStandardMaterial
    Achterlicht_wit: THREE.MeshStandardMaterial
    Wheel1A: THREE.MeshStandardMaterial
    ['Rims.FL']: THREE.MeshStandardMaterial
    brakes: THREE.MeshStandardMaterial
    ['Wheel1A.001']: THREE.MeshStandardMaterial
    ['Rims.FL.001']: THREE.MeshStandardMaterial
    ['brakes.001']: THREE.MeshStandardMaterial
    ['ColouredMtl.001']: THREE.MeshStandardMaterial
    ['paint1Mtl.001']: THREE.MeshStandardMaterial
    ['Wheel1A.002']: THREE.MeshStandardMaterial
    ['Rims.FL.002']: THREE.MeshStandardMaterial
    ['brakes.002']: THREE.MeshStandardMaterial
    ['Wheel1A.003']: THREE.MeshStandardMaterial
    ['Rims.FL.003']: THREE.MeshStandardMaterial
    ['brakes.003']: THREE.MeshStandardMaterial
    ['ColouredMtl.003']: THREE.MeshStandardMaterial
    ['paint1Mtl.003']: THREE.MeshStandardMaterial
  }
}

export default function Model({exteriorDesign, interiorDesign}: CarConfigs) {
  const { nodes, materials } = useGLTF('/porsche/scene.gltf') as GLTFResult

  const primaryColorMaterial = new THREE.MeshPhysicalMaterial({ color: exteriorDesign.primaryColor, roughness: 0.2, metalness: 0.8 });
  const secondaryColorMaterial = new THREE.MeshPhysicalMaterial({ color: exteriorDesign.secondaryColor === 'carbon' ? 'white' : exteriorDesign.secondaryColor, roughness: 0.2, metalness: 0.8 });
  const wheelMaterial = new THREE.MeshStandardMaterial({ color: 'silver', roughness: 0.2, metalness: 0.8, side: THREE.DoubleSide  });
  const braksMaterial = new THREE.MeshStandardMaterial({ color: exteriorDesign.brakesColor, roughness: 0.2, metalness: 0.5, side: THREE.DoubleSide });


  const [normalMap] = useLoader(THREE.TextureLoader, [
    '/textures/Leather_010_Normal.jpg',
  ])
  
  const internalColorMaterial = new THREE.MeshStandardMaterial({ normalMap: normalMap, color: interiorDesign.interiorColor});

  function wheelSeter(){
    return exteriorDesign.wheel === 'originalWheel' && <mesh geometry={nodes.Object_42.geometry} material={wheelMaterial} /> 
    || exteriorDesign.wheel === 'wheelExtra' && <Wheel /> 
    || exteriorDesign.wheel === 'wheelExtra2' && <Wheel2 />
  }
  
  return (
    <group dispose={null} position={[0, 0, 0]} scale={1.5} castShadow >
      
      <group position={[0, 0, -0.92]} rotation={[1.57, 0, 0]} scale={0.335} castShadow >
        <mesh geometry={nodes.Object_10.geometry} material={primaryColorMaterial} castShadow />
        <mesh geometry={nodes.Object_11.geometry} material={primaryColorMaterial} castShadow />
        <mesh geometry={nodes.Object_12.geometry} material={materials.wire_141007058} castShadow />
        <mesh geometry={nodes.Object_13.geometry} material={materials.Base} castShadow />

        {exteriorDesign.secondaryColor === 'carbon' ?<mesh geometry={nodes.Object_14.geometry} material={materials.Carbon1} castShadow /> :
        <mesh geometry={nodes.Object_14.geometry} material={secondaryColorMaterial} castShadow />}

        <mesh geometry={nodes.Object_15.geometry} material={materials.Carbon1M} castShadow />
        <mesh geometry={nodes.Object_16.geometry} material={materials.Carbon2} castShadow />
        <mesh geometry={nodes.Object_17.geometry} material={materials.Coloured} castShadow />
        <mesh geometry={nodes.Object_18.geometry} material={materials.Coloured} castShadow />
        <mesh geometry={nodes.Object_19.geometry} material={materials.Coloured} castShadow />
        <mesh geometry={nodes.Object_20.geometry} material={materials.Spiegels} castShadow />
        <mesh geometry={nodes.Object_21.geometry} material={materials.GlassMtl} castShadow />
        <mesh geometry={nodes.Object_22.geometry} material={materials.GlassRedMtl} castShadow />
        <mesh geometry={nodes.Object_23.geometry} material={materials.GlassDarkMtl} castShadow />
        <mesh geometry={nodes.Object_24.geometry} material={materials.Grille1A} castShadow />
        <mesh geometry={nodes.Object_25.geometry} material={materials.Grille2A} castShadow />
        <mesh geometry={nodes.Object_26.geometry} material={materials.Grille3A} castShadow />
        <mesh geometry={nodes.Object_27.geometry} material={materials.Grille4A} castShadow />
        <mesh geometry={nodes.Object_28.geometry} material={materials.interior_o} castShadow />
        <mesh geometry={nodes.Object_29.geometry} material={materials.interior} castShadow />
        <mesh geometry={nodes.Object_30.geometry} material={materials.interior} castShadow />
        <mesh geometry={nodes.Object_31.geometry} material={materials.color2_o} castShadow />
        {/* <mesh geometry={nodes.Object_32.geometry} material={materials.color2} castShadow /> */}
        <mesh geometry={nodes.Object_32.geometry} material={internalColorMaterial} castShadow />
        <mesh geometry={nodes.Object_33.geometry} material={materials.Lights} castShadow />
        <mesh geometry={nodes.Object_34.geometry} material={materials.Achterlichten} castShadow />
        <mesh geometry={nodes.Object_35.geometry} material={materials.kentekenlicht} castShadow />
        <mesh geometry={nodes.Object_36.geometry} material={materials.Angle_eye_binnen} castShadow />
        <mesh geometry={nodes.Object_37.geometry} material={materials.Angle_eye} castShadow />
        <mesh geometry={nodes.Object_38.geometry} material={materials.knipperlichten} castShadow />
        <mesh geometry={nodes.Object_39.geometry} material={materials.Achterlicht_wit} castShadow />
      </group>
      
      <group position={[2.93, 1.13, 3.05]} rotation={[1.57, -0.02, 0]} scale={0.33} castShadow >
        <mesh geometry={nodes.Object_56.geometry} material={materials['Wheel1A.003']} castShadow />
        <group position={[-1.09, 0, 0]} castShadow >
          <Tire />
        </group>
        {wheelSeter()}
        <mesh geometry={nodes.Object_43.geometry} material={materials.brakes} castShadow />
      </group>
      
      <group position={[-2.93, 1.13, 3.05]} rotation={[1.57, 0.02, 0]} scale={[-0.33, 0.33, 0.33]} castShadow >
        <mesh geometry={nodes.Object_56.geometry} material={materials['Wheel1A.003']} castShadow />
        <group position={[-1.09, 0, 0]} castShadow >
          <Tire />
        </group>
        {wheelSeter()}
        <mesh geometry={nodes.Object_47.geometry} material={materials['brakes.001']} castShadow />
      </group>
      
      <group position={[-2.95, 1.18, -4.91]} rotation={[1.57, 0.02, 0]} scale={[-0.39, 0.34, 0.34]} castShadow >
        <mesh geometry={nodes.Object_56.geometry} material={materials['Wheel1A.003']} castShadow />
        <group position={[-1.09, 0, 0]} castShadow >
          <Tire />
        </group>
        {wheelSeter()}
        <mesh geometry={nodes.Object_54.geometry} material={materials['brakes.002']} castShadow />
      </group>
      <group position={[2.97, 1.18, -4.91]} rotation={[1.57, -0.02, 0]} scale={[0.39, 0.34, 0.34]} castShadow >
        <mesh geometry={nodes.Object_56.geometry} material={materials['Wheel1A.003']} castShadow />
        <group position={[-1.09, 0, 0]} castShadow >
          <Tire />
        </group>
        {wheelSeter()}
        <mesh geometry={nodes.Object_58.geometry} material={materials['brakes.003']} castShadow />
      </group>

      <group position={[0, 0, -0.92]} rotation={[1.57, 0, 0]} scale={[-0.33, 0.33, 0.33]} castShadow >
        <mesh geometry={nodes.Object_49.geometry} material={braksMaterial} castShadow />
        <mesh geometry={nodes.Object_50.geometry} material={braksMaterial} castShadow />
      </group>
      <group position={[0.05, 0, -0.86]} rotation={[1.57, 0, 0]} scale={[-0.32, 0.32, 0.32]} castShadow >
        <mesh geometry={nodes.Object_60.geometry} material={braksMaterial} castShadow />
        <mesh geometry={nodes.Object_61.geometry} material={braksMaterial} castShadow />
      </group>
      <group position={[0, 0, -0.92]} rotation={[1.57, 0, 0]} scale={0.33} castShadow >
        <mesh geometry={nodes.Object_4.geometry} material={braksMaterial} castShadow />
        <mesh geometry={nodes.Object_5.geometry} material={braksMaterial} castShadow />
      </group>
      <group position={[-0.03, 0, -0.86]} rotation={[1.57, 0, 0]} scale={0.32} castShadow >
        <mesh geometry={nodes.Object_7.geometry} material={braksMaterial} castShadow />
        <mesh geometry={nodes.Object_8.geometry} material={braksMaterial} castShadow />
      </group>
    </group>
  )
}


useGLTF.preload('/porsche/scene.gltf')

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/lamp/scene.gltf -t -r public
Author: Bluenoseddonkey (https://sketchfab.com/Bluenoseddonkey)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/hanging-lamp-3aaa2376dec14c3fa2579b34d4399c38
Title: Hanging Lamp
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    defaultMaterial: THREE.Mesh;
  };
  materials: {
    lambert1: THREE.MeshStandardMaterial;
  };
};

export default function Lamp(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/lamp/scene.gltf") as GLTFResult;
  return (
    <group {...props} dispose={null} scale={0.025}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh position={[0, -32, 0]}>
            <sphereGeometry args={[3]} />
            <meshStandardMaterial color={"white"} emissive={[1, 1, 1]}/>
          </mesh>
          <mesh
            geometry={nodes.defaultMaterial.geometry}
            material={materials.lambert1}
            rotation={[-Math.PI / 2, 0, 0]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/lamp/scene.gltf");

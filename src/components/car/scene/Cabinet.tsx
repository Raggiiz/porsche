/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/cabinet/scene.gltf -t -r public
Author: NghiaNguyeen (https://sketchfab.com/kiroy2002)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/old-school-cabinet-af9c49cdc47e4eb2bcdd24b631ae4808
Title: Old School Cabinet
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["1_L_Material001_0"]: THREE.Mesh;
    ["2_L_Material001_0"]: THREE.Mesh;
    ["3_L_Material001_0"]: THREE.Mesh;
  };
  materials: {
    ["Material.001"]: THREE.MeshStandardMaterial;
  };
};

export default function Cabinet(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/cabinet/scene.gltf") as GLTFResult;
  return (
    <group {...props} dispose={null} castShadow >
      <group scale={0.01} castShadow >
        <mesh
          geometry={nodes["1_L_Material001_0"].geometry}
          material={materials["Material.001"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
          castShadow 
        />
        <mesh
          geometry={nodes["2_L_Material001_0"].geometry}
          material={materials["Material.001"]}
          position={[-39.61, 0, 200.18]}
          rotation={[-Math.PI / 2, 0, -2.02]}
          scale={100}
          castShadow 
        />
        <mesh
          geometry={nodes["3_L_Material001_0"].geometry}
          material={materials["Material.001"]}
          position={[-39.61, 0, 200.18]}
          rotation={[-Math.PI / 2, 0, -2.02]}
          scale={100}
          castShadow 
        />
      </group>
    </group>
  );
}

useGLTF.preload("/cabinet/scene.gltf");

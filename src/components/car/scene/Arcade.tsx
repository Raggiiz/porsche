/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/arcade/scene.gltf -t -r public
Author: Delinx (https://sketchfab.com/delinx)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/defender-arcade-9e656531a0ea4b6595d2337a4006a552
Title: Defender Arcade
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    defaultMaterial: THREE.Mesh
    defaultMaterial_1: THREE.Mesh
    defaultMaterial_2: THREE.Mesh
    defaultMaterial_3: THREE.Mesh
    defaultMaterial_4: THREE.Mesh
    defaultMaterial_5: THREE.Mesh
    defaultMaterial_6: THREE.Mesh
    defaultMaterial_7: THREE.Mesh
    defaultMaterial_8: THREE.Mesh
  }
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

export default function Arcade(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/arcade/scene.gltf') as GLTFResult

  materials['Material.001'].side = THREE.FrontSide

  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.defaultMaterial.geometry} material={materials['Material.001']} position={[65.33, 108.55, 20.93]} rotation={[-Math.PI / 2, 0, 0]} scale={100} castShadow receiveShadow/>
          <mesh geometry={nodes.defaultMaterial_1.geometry} material={materials['Material.001']} position={[68.68, 104.81, 16.6]} rotation={[-Math.PI / 2, 0.16, 0]} scale={100} castShadow receiveShadow/>
          <mesh geometry={nodes.defaultMaterial_2.geometry} material={materials['Material.001']} position={[78.4, 79.79, 11.45]} rotation={[-Math.PI / 2, 0, 0]} scale={100} castShadow receiveShadow/>
          <mesh geometry={nodes.defaultMaterial_3.geometry} material={materials['Material.001']} position={[79.46, 77.67, 3.91]} rotation={[-Math.PI / 2, 0, 0]} scale={100} castShadow receiveShadow/>
          <mesh geometry={nodes.defaultMaterial_4.geometry} material={materials['Material.001']} position={[79.18, 92.31, 3.91]} rotation={[-Math.PI / 2, 0, 0]} scale={100} castShadow receiveShadow/>
          <mesh geometry={nodes.defaultMaterial_5.geometry} material={materials['Material.001']} position={[57.57, 127.52, 4.14]} rotation={[-Math.PI / 2, 0, 0]} scale={100} castShadow receiveShadow/>
          <mesh geometry={nodes.defaultMaterial_6.geometry} material={materials['Material.001']} position={[57.57, 127.52, 4.14]} rotation={[-Math.PI / 2, 0, 0]} scale={100} castShadow receiveShadow/>
          <mesh geometry={nodes.defaultMaterial_7.geometry} material={materials['Material.001']} position={[57.57, 127.52, 4.14]} rotation={[-Math.PI / 2, 0, 0]} scale={100} castShadow receiveShadow/>
          <mesh geometry={nodes.defaultMaterial_8.geometry} material={materials['Material.001']} position={[37.26, 80.03, 4.15]} rotation={[-Math.PI / 2, 0, 0]} scale={100} castShadow receiveShadow/>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/arcade/scene.gltf')
